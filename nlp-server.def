Bootstrap: docker
From: runpod/pytorch:2.1.0-py3.10-cuda11.8.0-devel-ubuntu22.04

%labels
    Author Your Name
    Version v1.0.0
    Description NLP Server for TTS, ASR, LLMs, and Translation

%environment
    export LC_ALL=C
    export PYTHONPATH=/app:$PYTHONPATH
    export CUDA_VISIBLE_DEVICES=0
    export TORCH_DEVICE=auto

%files
    requirements.txt /tmp/requirements.txt
    app.py /app/app.py
    start_server.py /app/start_server.py
    test_server.py /app/test_server.py
    config/ /app/config/
    services/ /app/services/
    examples/ /app/examples/
    README.md /app/README.md
    env.example /app/env.example

%post
    # Update package lists
    apt-get update
    
    # Install system dependencies
    apt-get install -y \
        wget \
        git \
        build-essential \
        libasound2-dev \
        libportaudio2 \
        libportaudiocpp0 \
        portaudio19-dev \
        python3-dev \
        python3-pip \
        python3-venv \
        curl \
        && rm -rf /var/lib/apt/lists/*
    
    # Install PortAudio
    cd /tmp
    wget https://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz
    tar -xvzf pa_stable_v190700_20210406.tgz
    cd portaudio && ./configure && make && make install && cd ..
    ldconfig
    
    # Install PyAudio
    pip install pyaudio --upgrade
    
    # Install PyTorch with CUDA 12.1
    pip install torch==2.5.1+cu121 torchaudio==2.5.1 --index-url https://download.pytorch.org/whl/cu121
    
    # Clone and install Coqui TTS
    git clone https://github.com/bytlabs-io/coqui-ai-TTS /tmp/coqui-ai-TTS
    cd /tmp/coqui-ai-TTS && git checkout dev-akan
    pip install -e /tmp/coqui-ai-TTS[all]
    
    # Install other Python dependencies
    pip install -r /tmp/requirements.txt
    
    # Configure Git credentials
    git config --global credential.helper store
    
    # Create models directory
    mkdir -p /app/models
    
    # Clone the dataset
    cd /app/models
    git clone https://huggingface.co/hci-lab-dcug/ugtts-multispeaker-max42secs-total7hrs-sr22050-bibletts-finetuned ./ugtts-multispeaker
    
    # Update speakers_file path in config.json if it exists
    if [ -f "/app/models/ugtts-multispeaker/config.json" ]; then
        sed -i 's|"speakers_file": ".*"|"speakers_file": "/app/models/ugtts-multispeaker/speakers.pth"|g' /app/models/ugtts-multispeaker/config.json
    fi
    
    # Create logs directory
    mkdir -p /app/logs
    
    # Set permissions
    chmod +x /app/start_server.py
    chmod +x /app/test_server.py
    
    # Clean up
    rm -rf /tmp/portaudio*
    rm -rf /tmp/coqui-ai-TTS
    rm /tmp/requirements.txt

%runscript
    cd /app
    exec python3 start_server.py "$@"

%startscript
    cd /app
    exec python3 start_server.py "$@"

%test
    cd /app
    python3 test_server.py 